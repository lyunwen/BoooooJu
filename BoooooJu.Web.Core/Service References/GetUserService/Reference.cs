//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BoooooJu.Web.Core.GetUserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/BoooooJu.Service.Core.Dal")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GetUserService.IGetUser")]
    public interface IGetUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseGetDataOf_User/GetDataByPrimaryKey", ReplyAction="http://tempuri.org/IBaseGetDataOf_User/GetDataByPrimaryKeyResponse")]
        BoooooJu.Web.Core.GetUserService.User GetDataByPrimaryKey(int key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseGetDataOf_User/GetDataByPrimaryKey", ReplyAction="http://tempuri.org/IBaseGetDataOf_User/GetDataByPrimaryKeyResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetDataByPrimaryKeyAsync(int key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseGetDataOf_User/GetDataByUniqueKey", ReplyAction="http://tempuri.org/IBaseGetDataOf_User/GetDataByUniqueKeyResponse")]
        BoooooJu.Web.Core.GetUserService.User GetDataByUniqueKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseGetDataOf_User/GetDataByUniqueKey", ReplyAction="http://tempuri.org/IBaseGetDataOf_User/GetDataByUniqueKeyResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetDataByUniqueKeyAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseGetDataOf_User/GetDatasBy", ReplyAction="http://tempuri.org/IBaseGetDataOf_User/GetDatasByResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BoooooJu.Web.Core.GetUserService.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BoooooJu.Web.Core.GetUserService.User[]))]
        BoooooJu.Web.Core.GetUserService.User[] GetDatasBy(object page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseGetDataOf_User/GetDatasBy", ReplyAction="http://tempuri.org/IBaseGetDataOf_User/GetDatasByResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User[]> GetDatasByAsync(object page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/GetUserById", ReplyAction="http://tempuri.org/IGetUser/GetUserByIdResponse")]
        BoooooJu.Web.Core.GetUserService.User GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/GetUserById", ReplyAction="http://tempuri.org/IGetUser/GetUserByIdResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/GetUserByAccount", ReplyAction="http://tempuri.org/IGetUser/GetUserByAccountResponse")]
        BoooooJu.Web.Core.GetUserService.User GetUserByAccount(string accountName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/GetUserByAccount", ReplyAction="http://tempuri.org/IGetUser/GetUserByAccountResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetUserByAccountAsync(string accountName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/GetUserByCellPhone", ReplyAction="http://tempuri.org/IGetUser/GetUserByCellPhoneResponse")]
        BoooooJu.Web.Core.GetUserService.User GetUserByCellPhone(string cellPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/GetUserByCellPhone", ReplyAction="http://tempuri.org/IGetUser/GetUserByCellPhoneResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetUserByCellPhoneAsync(string cellPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/GetUsers", ReplyAction="http://tempuri.org/IGetUser/GetUsersResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BoooooJu.Web.Core.GetUserService.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BoooooJu.Web.Core.GetUserService.User[]))]
        BoooooJu.Web.Core.GetUserService.User[] GetUsers(object page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/GetUsers", ReplyAction="http://tempuri.org/IGetUser/GetUsersResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User[]> GetUsersAsync(object page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/SignByAccountName", ReplyAction="http://tempuri.org/IGetUser/SignByAccountNameResponse")]
        BoooooJu.Web.Core.GetUserService.User SignByAccountName(string accountName, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/SignByAccountName", ReplyAction="http://tempuri.org/IGetUser/SignByAccountNameResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> SignByAccountNameAsync(string accountName, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/SignByCellPhone", ReplyAction="http://tempuri.org/IGetUser/SignByCellPhoneResponse")]
        BoooooJu.Web.Core.GetUserService.User SignByCellPhone(string cellPhone, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/SignByCellPhone", ReplyAction="http://tempuri.org/IGetUser/SignByCellPhoneResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> SignByCellPhoneAsync(string cellPhone, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/SignByEmaiAddress", ReplyAction="http://tempuri.org/IGetUser/SignByEmaiAddressResponse")]
        BoooooJu.Web.Core.GetUserService.User SignByEmaiAddress(string emailAddresss, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/SignByEmaiAddress", ReplyAction="http://tempuri.org/IGetUser/SignByEmaiAddressResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> SignByEmaiAddressAsync(string emailAddresss, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/SignByOpenId", ReplyAction="http://tempuri.org/IGetUser/SignByOpenIdResponse")]
        BoooooJu.Web.Core.GetUserService.User SignByOpenId(string openId, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetUser/SignByOpenId", ReplyAction="http://tempuri.org/IGetUser/SignByOpenIdResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> SignByOpenIdAsync(string openId, string pswd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetUserChannel : BoooooJu.Web.Core.GetUserService.IGetUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserClient : System.ServiceModel.ClientBase<BoooooJu.Web.Core.GetUserService.IGetUser>, BoooooJu.Web.Core.GetUserService.IGetUser {
        
        public GetUserClient() {
        }
        
        public GetUserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetUserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetUserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetUserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BoooooJu.Web.Core.GetUserService.User GetDataByPrimaryKey(int key) {
            return base.Channel.GetDataByPrimaryKey(key);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetDataByPrimaryKeyAsync(int key) {
            return base.Channel.GetDataByPrimaryKeyAsync(key);
        }
        
        public BoooooJu.Web.Core.GetUserService.User GetDataByUniqueKey(string key) {
            return base.Channel.GetDataByUniqueKey(key);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetDataByUniqueKeyAsync(string key) {
            return base.Channel.GetDataByUniqueKeyAsync(key);
        }
        
        public BoooooJu.Web.Core.GetUserService.User[] GetDatasBy(object page) {
            return base.Channel.GetDatasBy(page);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User[]> GetDatasByAsync(object page) {
            return base.Channel.GetDatasByAsync(page);
        }
        
        public BoooooJu.Web.Core.GetUserService.User GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public BoooooJu.Web.Core.GetUserService.User GetUserByAccount(string accountName) {
            return base.Channel.GetUserByAccount(accountName);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetUserByAccountAsync(string accountName) {
            return base.Channel.GetUserByAccountAsync(accountName);
        }
        
        public BoooooJu.Web.Core.GetUserService.User GetUserByCellPhone(string cellPhone) {
            return base.Channel.GetUserByCellPhone(cellPhone);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> GetUserByCellPhoneAsync(string cellPhone) {
            return base.Channel.GetUserByCellPhoneAsync(cellPhone);
        }
        
        public BoooooJu.Web.Core.GetUserService.User[] GetUsers(object page) {
            return base.Channel.GetUsers(page);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User[]> GetUsersAsync(object page) {
            return base.Channel.GetUsersAsync(page);
        }
        
        public BoooooJu.Web.Core.GetUserService.User SignByAccountName(string accountName, string pswd) {
            return base.Channel.SignByAccountName(accountName, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> SignByAccountNameAsync(string accountName, string pswd) {
            return base.Channel.SignByAccountNameAsync(accountName, pswd);
        }
        
        public BoooooJu.Web.Core.GetUserService.User SignByCellPhone(string cellPhone, string pswd) {
            return base.Channel.SignByCellPhone(cellPhone, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> SignByCellPhoneAsync(string cellPhone, string pswd) {
            return base.Channel.SignByCellPhoneAsync(cellPhone, pswd);
        }
        
        public BoooooJu.Web.Core.GetUserService.User SignByEmaiAddress(string emailAddresss, string pswd) {
            return base.Channel.SignByEmaiAddress(emailAddresss, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> SignByEmaiAddressAsync(string emailAddresss, string pswd) {
            return base.Channel.SignByEmaiAddressAsync(emailAddresss, pswd);
        }
        
        public BoooooJu.Web.Core.GetUserService.User SignByOpenId(string openId, string pswd) {
            return base.Channel.SignByOpenId(openId, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.GetUserService.User> SignByOpenIdAsync(string openId, string pswd) {
            return base.Channel.SignByOpenIdAsync(openId, pswd);
        }
    }
}
