//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace BoooooJu.Web.Core.AccountService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/BoooooJu.Service.DPModels.OBModels")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountNameValidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CellPhoneValidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailAddressValidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpenIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenIdValidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PswdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PswdSaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PswdTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountNameValidate {
            get {
                return this.AccountNameValidateField;
            }
            set {
                if ((this.AccountNameValidateField.Equals(value) != true)) {
                    this.AccountNameValidateField = value;
                    this.RaisePropertyChanged("AccountNameValidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CellPhoneValidate {
            get {
                return this.CellPhoneValidateField;
            }
            set {
                if ((this.CellPhoneValidateField.Equals(value) != true)) {
                    this.CellPhoneValidateField = value;
                    this.RaisePropertyChanged("CellPhoneValidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailAddressValidate {
            get {
                return this.EmailAddressValidateField;
            }
            set {
                if ((this.EmailAddressValidateField.Equals(value) != true)) {
                    this.EmailAddressValidateField = value;
                    this.RaisePropertyChanged("EmailAddressValidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpenId {
            get {
                return this.OpenIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenIdField, value) != true)) {
                    this.OpenIdField = value;
                    this.RaisePropertyChanged("OpenId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenIdValidate {
            get {
                return this.OpenIdValidateField;
            }
            set {
                if ((this.OpenIdValidateField.Equals(value) != true)) {
                    this.OpenIdValidateField = value;
                    this.RaisePropertyChanged("OpenIdValidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pswd {
            get {
                return this.PswdField;
            }
            set {
                if ((object.ReferenceEquals(this.PswdField, value) != true)) {
                    this.PswdField = value;
                    this.RaisePropertyChanged("Pswd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PswdSalt {
            get {
                return this.PswdSaltField;
            }
            set {
                if ((object.ReferenceEquals(this.PswdSaltField, value) != true)) {
                    this.PswdSaltField = value;
                    this.RaisePropertyChanged("PswdSalt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PswdType {
            get {
                return this.PswdTypeField;
            }
            set {
                if ((this.PswdTypeField.Equals(value) != true)) {
                    this.PswdTypeField = value;
                    this.RaisePropertyChanged("PswdType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Page", Namespace="http://schemas.datacontract.org/2004/07/BoooooJu.Service.Core.QueryParameter")]
    [System.SerializableAttribute()]
    public partial class Page : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BoooooJu.Web.Core.AccountService.Sort SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BoooooJu.Web.Core.AccountService.Sort Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCounts {
            get {
                return this.TotalCountsField;
            }
            set {
                if ((this.TotalCountsField.Equals(value) != true)) {
                    this.TotalCountsField = value;
                    this.RaisePropertyChanged("TotalCounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPages {
            get {
                return this.TotalPagesField;
            }
            set {
                if ((this.TotalPagesField.Equals(value) != true)) {
                    this.TotalPagesField = value;
                    this.RaisePropertyChanged("TotalPages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sort", Namespace="http://schemas.datacontract.org/2004/07/BoooooJu.Service.Core.QueryParameter.Base" +
        "")]
    public enum Sort : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Asc = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Desc = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User_Rank", Namespace="http://schemas.datacontract.org/2004/07/BoooooJu.Service.Core.Dal.OBModels")]
    public enum User_Rank : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Id = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NickName = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sex = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateTime = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Role = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/BoooooJu.Service.DPModels")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignatureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IQueryService")]
    public interface IQueryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoById", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByIdResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoById", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByIdResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoByAccountName", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByAccountNameResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoByAccountName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoByAccountName", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByAccountNameResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByAccountNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoByEmail", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByEmailResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoByEmail", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByEmailResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoByCellPhone", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByCellPhoneResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoByCellPhone(string cellPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoByCellPhone", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByCellPhoneResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByCellPhoneAsync(string cellPhone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoByOpenId", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByOpenIdResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoByOpenId(string openId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfoByOpenId", ReplyAction="http://tempuri.org/IQueryService/FindUserInfoByOpenIdResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByOpenIdAsync(string openId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfosByRole", ReplyAction="http://tempuri.org/IQueryService/FindUserInfosByRoleResponse")]
        System.Collections.Generic.KeyValuePair<BoooooJu.Web.Core.AccountService.Page, BoooooJu.Web.Core.AccountService.UserInfo[]> FindUserInfosByRole(BoooooJu.Web.Core.AccountService.Page page, int role, BoooooJu.Web.Core.AccountService.User_Rank rank, string nickName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryService/FindUserInfosByRole", ReplyAction="http://tempuri.org/IQueryService/FindUserInfosByRoleResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<BoooooJu.Web.Core.AccountService.Page, BoooooJu.Web.Core.AccountService.UserInfo[]>> FindUserInfosByRoleAsync(BoooooJu.Web.Core.AccountService.Page page, int role, BoooooJu.Web.Core.AccountService.User_Rank rank, string nickName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQueryServiceChannel : BoooooJu.Web.Core.AccountService.IQueryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryServiceClient : System.ServiceModel.ClientBase<BoooooJu.Web.Core.AccountService.IQueryService>, BoooooJu.Web.Core.AccountService.IQueryService {
        
        public QueryServiceClient() {
        }
        
        public QueryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QueryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoById(int id) {
            return base.Channel.FindUserInfoById(id);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByIdAsync(int id) {
            return base.Channel.FindUserInfoByIdAsync(id);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoByAccountName(string name) {
            return base.Channel.FindUserInfoByAccountName(name);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByAccountNameAsync(string name) {
            return base.Channel.FindUserInfoByAccountNameAsync(name);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoByEmail(string email) {
            return base.Channel.FindUserInfoByEmail(email);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByEmailAsync(string email) {
            return base.Channel.FindUserInfoByEmailAsync(email);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoByCellPhone(string cellPhone) {
            return base.Channel.FindUserInfoByCellPhone(cellPhone);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByCellPhoneAsync(string cellPhone) {
            return base.Channel.FindUserInfoByCellPhoneAsync(cellPhone);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo FindUserInfoByOpenId(string openId) {
            return base.Channel.FindUserInfoByOpenId(openId);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> FindUserInfoByOpenIdAsync(string openId) {
            return base.Channel.FindUserInfoByOpenIdAsync(openId);
        }
        
        public System.Collections.Generic.KeyValuePair<BoooooJu.Web.Core.AccountService.Page, BoooooJu.Web.Core.AccountService.UserInfo[]> FindUserInfosByRole(BoooooJu.Web.Core.AccountService.Page page, int role, BoooooJu.Web.Core.AccountService.User_Rank rank, string nickName) {
            return base.Channel.FindUserInfosByRole(page, role, rank, nickName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<BoooooJu.Web.Core.AccountService.Page, BoooooJu.Web.Core.AccountService.UserInfo[]>> FindUserInfosByRoleAsync(BoooooJu.Web.Core.AccountService.Page page, int role, BoooooJu.Web.Core.AccountService.User_Rank rank, string nickName) {
            return base.Channel.FindUserInfosByRoleAsync(page, role, rank, nickName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IRegisterService")]
    public interface IRegisterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegisterService/RegisterByAccountName", ReplyAction="http://tempuri.org/IRegisterService/RegisterByAccountNameResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo RegisterByAccountName(BoooooJu.Web.Core.AccountService.User user, string accountName, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegisterService/RegisterByAccountName", ReplyAction="http://tempuri.org/IRegisterService/RegisterByAccountNameResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> RegisterByAccountNameAsync(BoooooJu.Web.Core.AccountService.User user, string accountName, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegisterService/RegisterByCellPhone", ReplyAction="http://tempuri.org/IRegisterService/RegisterByCellPhoneResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo RegisterByCellPhone(BoooooJu.Web.Core.AccountService.User user, string cellPhone, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegisterService/RegisterByCellPhone", ReplyAction="http://tempuri.org/IRegisterService/RegisterByCellPhoneResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> RegisterByCellPhoneAsync(BoooooJu.Web.Core.AccountService.User user, string cellPhone, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegisterService/RegisterByEmailAddress", ReplyAction="http://tempuri.org/IRegisterService/RegisterByEmailAddressResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo RegisterByEmailAddress(BoooooJu.Web.Core.AccountService.User user, string emailAddress, string pwsd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegisterService/RegisterByEmailAddress", ReplyAction="http://tempuri.org/IRegisterService/RegisterByEmailAddressResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> RegisterByEmailAddressAsync(BoooooJu.Web.Core.AccountService.User user, string emailAddress, string pwsd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegisterService/RegisterByOpneId", ReplyAction="http://tempuri.org/IRegisterService/RegisterByOpneIdResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo RegisterByOpneId(BoooooJu.Web.Core.AccountService.User user, string opneId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegisterService/RegisterByOpneId", ReplyAction="http://tempuri.org/IRegisterService/RegisterByOpneIdResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> RegisterByOpneIdAsync(BoooooJu.Web.Core.AccountService.User user, string opneId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegisterServiceChannel : BoooooJu.Web.Core.AccountService.IRegisterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterServiceClient : System.ServiceModel.ClientBase<BoooooJu.Web.Core.AccountService.IRegisterService>, BoooooJu.Web.Core.AccountService.IRegisterService {
        
        public RegisterServiceClient() {
        }
        
        public RegisterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegisterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegisterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegisterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo RegisterByAccountName(BoooooJu.Web.Core.AccountService.User user, string accountName, string pswd) {
            return base.Channel.RegisterByAccountName(user, accountName, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> RegisterByAccountNameAsync(BoooooJu.Web.Core.AccountService.User user, string accountName, string pswd) {
            return base.Channel.RegisterByAccountNameAsync(user, accountName, pswd);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo RegisterByCellPhone(BoooooJu.Web.Core.AccountService.User user, string cellPhone, string pswd) {
            return base.Channel.RegisterByCellPhone(user, cellPhone, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> RegisterByCellPhoneAsync(BoooooJu.Web.Core.AccountService.User user, string cellPhone, string pswd) {
            return base.Channel.RegisterByCellPhoneAsync(user, cellPhone, pswd);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo RegisterByEmailAddress(BoooooJu.Web.Core.AccountService.User user, string emailAddress, string pwsd) {
            return base.Channel.RegisterByEmailAddress(user, emailAddress, pwsd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> RegisterByEmailAddressAsync(BoooooJu.Web.Core.AccountService.User user, string emailAddress, string pwsd) {
            return base.Channel.RegisterByEmailAddressAsync(user, emailAddress, pwsd);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo RegisterByOpneId(BoooooJu.Web.Core.AccountService.User user, string opneId) {
            return base.Channel.RegisterByOpneId(user, opneId);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> RegisterByOpneIdAsync(BoooooJu.Web.Core.AccountService.User user, string opneId) {
            return base.Channel.RegisterByOpneIdAsync(user, opneId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.ISignInService")]
    public interface ISignInService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/SignInById", ReplyAction="http://tempuri.org/ISignInService/SignInByIdResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo SignInById(int userId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/SignInById", ReplyAction="http://tempuri.org/ISignInService/SignInByIdResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> SignInByIdAsync(int userId, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/GetTokenByAccountName", ReplyAction="http://tempuri.org/ISignInService/GetTokenByAccountNameResponse")]
        string GetTokenByAccountName(string accountName, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/GetTokenByAccountName", ReplyAction="http://tempuri.org/ISignInService/GetTokenByAccountNameResponse")]
        System.Threading.Tasks.Task<string> GetTokenByAccountNameAsync(string accountName, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/GetTokenByCellPhone", ReplyAction="http://tempuri.org/ISignInService/GetTokenByCellPhoneResponse")]
        string GetTokenByCellPhone(string cellPhone, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/GetTokenByCellPhone", ReplyAction="http://tempuri.org/ISignInService/GetTokenByCellPhoneResponse")]
        System.Threading.Tasks.Task<string> GetTokenByCellPhoneAsync(string cellPhone, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/GetTokenByEmaiAddress", ReplyAction="http://tempuri.org/ISignInService/GetTokenByEmaiAddressResponse")]
        string GetTokenByEmaiAddress(string emailAddresss, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/GetTokenByEmaiAddress", ReplyAction="http://tempuri.org/ISignInService/GetTokenByEmaiAddressResponse")]
        System.Threading.Tasks.Task<string> GetTokenByEmaiAddressAsync(string emailAddresss, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/GetTokenByOpenId", ReplyAction="http://tempuri.org/ISignInService/GetTokenByOpenIdResponse")]
        string GetTokenByOpenId(string openId, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignInService/GetTokenByOpenId", ReplyAction="http://tempuri.org/ISignInService/GetTokenByOpenIdResponse")]
        System.Threading.Tasks.Task<string> GetTokenByOpenIdAsync(string openId, string pswd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISignInServiceChannel : BoooooJu.Web.Core.AccountService.ISignInService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignInServiceClient : System.ServiceModel.ClientBase<BoooooJu.Web.Core.AccountService.ISignInService>, BoooooJu.Web.Core.AccountService.ISignInService {
        
        public SignInServiceClient() {
        }
        
        public SignInServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SignInServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignInServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignInServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo SignInById(int userId, string token) {
            return base.Channel.SignInById(userId, token);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> SignInByIdAsync(int userId, string token) {
            return base.Channel.SignInByIdAsync(userId, token);
        }
        
        public string GetTokenByAccountName(string accountName, string pswd) {
            return base.Channel.GetTokenByAccountName(accountName, pswd);
        }
        
        public System.Threading.Tasks.Task<string> GetTokenByAccountNameAsync(string accountName, string pswd) {
            return base.Channel.GetTokenByAccountNameAsync(accountName, pswd);
        }
        
        public string GetTokenByCellPhone(string cellPhone, string pswd) {
            return base.Channel.GetTokenByCellPhone(cellPhone, pswd);
        }
        
        public System.Threading.Tasks.Task<string> GetTokenByCellPhoneAsync(string cellPhone, string pswd) {
            return base.Channel.GetTokenByCellPhoneAsync(cellPhone, pswd);
        }
        
        public string GetTokenByEmaiAddress(string emailAddresss, string pswd) {
            return base.Channel.GetTokenByEmaiAddress(emailAddresss, pswd);
        }
        
        public System.Threading.Tasks.Task<string> GetTokenByEmaiAddressAsync(string emailAddresss, string pswd) {
            return base.Channel.GetTokenByEmaiAddressAsync(emailAddresss, pswd);
        }
        
        public string GetTokenByOpenId(string openId, string pswd) {
            return base.Channel.GetTokenByOpenId(openId, pswd);
        }
        
        public System.Threading.Tasks.Task<string> GetTokenByOpenIdAsync(string openId, string pswd) {
            return base.Channel.GetTokenByOpenIdAsync(openId, pswd);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IUpdateService")]
    public interface IUpdateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdByAccountName", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByAccountNameResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo AlterPswdByAccountName(string accountName, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdByAccountName", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByAccountNameResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByAccountNameAsync(string accountName, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdByCellPhone", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByCellPhoneResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo AlterPswdByCellPhone(string cellPhone, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdByCellPhone", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByCellPhoneResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByCellPhoneAsync(string cellPhone, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdByEmailAddress", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByEmailAddressResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo AlterPswdByEmailAddress(string emailAddress, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdByEmailAddress", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByEmailAddressResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByEmailAddressAsync(string emailAddress, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdById", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByIdResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo AlterPswdById(int userId, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdById", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByIdResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByIdAsync(int userId, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdByOpenId", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByOpenIdResponse")]
        BoooooJu.Web.Core.AccountService.UserInfo AlterPswdByOpenId(string openId, string pswd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUpdateService/AlterPswdByOpenId", ReplyAction="http://tempuri.org/IUpdateService/AlterPswdByOpenIdResponse")]
        System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByOpenIdAsync(string openId, string pswd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUpdateServiceChannel : BoooooJu.Web.Core.AccountService.IUpdateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateServiceClient : System.ServiceModel.ClientBase<BoooooJu.Web.Core.AccountService.IUpdateService>, BoooooJu.Web.Core.AccountService.IUpdateService {
        
        public UpdateServiceClient() {
        }
        
        public UpdateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UpdateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UpdateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo AlterPswdByAccountName(string accountName, string pswd) {
            return base.Channel.AlterPswdByAccountName(accountName, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByAccountNameAsync(string accountName, string pswd) {
            return base.Channel.AlterPswdByAccountNameAsync(accountName, pswd);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo AlterPswdByCellPhone(string cellPhone, string pswd) {
            return base.Channel.AlterPswdByCellPhone(cellPhone, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByCellPhoneAsync(string cellPhone, string pswd) {
            return base.Channel.AlterPswdByCellPhoneAsync(cellPhone, pswd);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo AlterPswdByEmailAddress(string emailAddress, string pswd) {
            return base.Channel.AlterPswdByEmailAddress(emailAddress, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByEmailAddressAsync(string emailAddress, string pswd) {
            return base.Channel.AlterPswdByEmailAddressAsync(emailAddress, pswd);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo AlterPswdById(int userId, string pswd) {
            return base.Channel.AlterPswdById(userId, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByIdAsync(int userId, string pswd) {
            return base.Channel.AlterPswdByIdAsync(userId, pswd);
        }
        
        public BoooooJu.Web.Core.AccountService.UserInfo AlterPswdByOpenId(string openId, string pswd) {
            return base.Channel.AlterPswdByOpenId(openId, pswd);
        }
        
        public System.Threading.Tasks.Task<BoooooJu.Web.Core.AccountService.UserInfo> AlterPswdByOpenIdAsync(string openId, string pswd) {
            return base.Channel.AlterPswdByOpenIdAsync(openId, pswd);
        }
    }
}
